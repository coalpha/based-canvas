var BasedCanvas=function(){"use strict";let t=window.devicePixelRatio;const e=[];window.addEventListener("resize",(function(){const i=window.devicePixelRatio;t!==i&&e.forEach(t=>t())}));var i=e.push.bind(e);const s=[],n=s.push.bind(s),h={dpx:0,cpx:0};function a(){const[t,e]=function(){const t=window.devicePixelRatio;for(let i=1;i<100;i++)if(e=t*i,Math.abs(e-(0|e))<.001)return[Math.round(t*i),i];var e;return[1,1]}();h.dpx=t,h.cpx=e,s.forEach(t=>t())}a(),i(a);var r,o,c,d,l,p,w,u,v,g,f,M,x,C,W,k=function(t,e,i){if(!e.has(t))throw new TypeError("attempted to set private field on non-instance");return e.set(t,i),i},L=function(t,e){if(!e.has(t))throw new TypeError("attempted to get private field on non-instance");return e.get(t)};const R={alpha:!1};class b{constructor(t,e){r.set(this,void 0),o.set(this,void 0),c.set(this,void 0),d.set(this,void 0),l.set(this,void 0),p.set(this,void 0),w.set(this,void 0),u.set(this,void 0),v.set(this,void 0),g.set(this,void 0),f.set(this,void 0),M.set(this,void 0),this.lfprChanged=this.recalc,x.set(this,[]),this.addCtxResizeListener=L(this,x).push.bind(L(this,x)),C.set(this,[]),this.addCanvasResizeListener=L(this,C).push.bind(L(this,C)),W.set(this,[]),this.addContainerResizeListener=L(this,W).push.bind(L(this,W));const i=Object.assign(R,e),s=document.createElement("canvas"),h=s.getContext("2d",i);if(null==h)throw new Error('HTMLElement.getContext("2d") returned null!');t.appendChild(s),n(this.lfprChanged.bind(this)),new ResizeObserver(this.lcontainerResized.bind(this)).observe(t),k(this,r,h),k(this,d,s),k(this,w,t),k(this,g,!!i.overflow),this.fetch()}get ctx(){return L(this,r)}get ctxWidth(){return L(this,o)}get ctxHeight(){return L(this,c)}get canvas(){return L(this,d)}get canvasWidth(){return L(this,l)}get canvasHeight(){return L(this,p)}get container(){return L(this,w)}get containerWidth(){return L(this,u)}get containerHeight(){return L(this,v)}get fprCountX(){return L(this,f)}get fprCountY(){return L(this,M)}lcontainerResized([{contentRect:{width:t,height:e}}]){k(this,u,t),k(this,v,e),this.recalc(),this.callContainerListeners()}fetch(){k(this,o,L(this,d).width),k(this,c,L(this,d).height);const t=window.getComputedStyle(L(this,d));k(this,l,+t.width.slice(-2)),k(this,p,+t.height.slice(-2));const e=window.getComputedStyle(L(this,w));k(this,u,+e.width.slice(-2)),k(this,v,+e.height.slice(-2))}recalc(){const{dpx:t,cpx:e}=h,i=L(this,g)?Math.ceil:Math.floor,s=i(L(this,u)/e),n=i(L(this,v)/e);k(this,f,s),k(this,M,n);const a=s*t,r=n*t,w=a!==L(this,o)||r!==L(this,c),x=s*e,C=n*e,W=x!==L(this,l)||C!==L(this,p);w&&(L(this,d).width=a,L(this,d).height=r,k(this,o,a),k(this,c,r)),W&&(L(this,d).style.width=`${x}px`,L(this,d).style.height=`${C}px`,k(this,l,x),k(this,p,C)),w&&this.callCtxListeners(),W&&this.callCanvasListeners()}callCtxListeners(){L(this,x).forEach(t=>t())}callCanvasListeners(){L(this,C).forEach(t=>t())}callContainerListeners(){L(this,W).forEach(t=>t())}}return r=new WeakMap,o=new WeakMap,c=new WeakMap,d=new WeakMap,l=new WeakMap,p=new WeakMap,w=new WeakMap,u=new WeakMap,v=new WeakMap,g=new WeakMap,f=new WeakMap,M=new WeakMap,x=new WeakMap,C=new WeakMap,W=new WeakMap,b.currentFPR=h,b.addFPRListener=n,b}();
//# sourceMappingURL=lib.iife.js.map
