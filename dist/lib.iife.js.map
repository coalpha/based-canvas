{"version":3,"file":"lib.iife.js","sources":["../src/DPR.ts","../src/FPR.ts","../src/isPrettyMuchAnInteger.ts","../src/BasedCanvas.ts"],"sourcesContent":["import Runnable from \"./Runnable\";\n\nlet lastdpr = window.devicePixelRatio;\n\nconst listeners: Runnable[] = [];\n\nfunction updateDPR() {\n   const newdpr = window.devicePixelRatio;\n   if (lastdpr !== newdpr) {\n      listeners.forEach(ru => ru());\n   }\n}\n\nwindow.addEventListener(\"resize\", updateDPR);\n\nexport default listeners.push.bind(listeners);\n","import Runnable from \"./Runnable\";\nimport addDPRListener from \"./DPR\";\nimport kindaInt from \"./isPrettyMuchAnInteger\";\nimport { DisplayPixels, CSSPixels } from \"./pixels\";\n\nconst listeners: Runnable[] = [];\n\nexport const addListener = listeners.push.bind(listeners);\n\nexport const currentFPR = {\n   dpx: 0 as DisplayPixels,\n   cpx: 0 as CSSPixels,\n};\n\nconst CSS_PIXELS_LIMIT = 100;\n\nfunction getFPR(): [DisplayPixels, CSSPixels] {\n   const dpr = window.devicePixelRatio;\n   for (let co = 1; co < CSS_PIXELS_LIMIT; co++) {\n      if (kindaInt(dpr * co)) {\n         return [\n            Math.round(dpr * co) as DisplayPixels,\n            co as CSSPixels,\n         ];\n      }\n   }\n   return [\n      1 as DisplayPixels,\n      1 as CSSPixels,\n   ];\n}\n\nfunction updateFPR() {\n   const [dpx, cpx] = getFPR();\n   currentFPR.dpx = dpx;\n   currentFPR.cpx = cpx;\n   listeners.forEach(ru => ru());\n}\n\nupdateFPR();\n\naddDPRListener(updateFPR);\n","const TOLERANCE = 0.001;\n\nexport default function isPrettyMuchAnInteger(n: number): boolean {\n   return Math.abs(n - (n|0)) < TOLERANCE;\n}\n","import Runnable from \"./Runnable\";\nimport IBasedCanvas from \"./IBasedCanvas\";\nimport { RasterUnits, DisplayPixels, CSSPixels } from \"./pixels\";\nimport { currentFPR, addListener } from \"./FPR\";\n\ninterface BasedCanvasOptions extends CanvasRenderingContext2DSettings{\n   overflow: boolean;\n}\n\nconst defaultBasedCanvasOptions = { alpha: false } as BasedCanvasOptions;\n\nexport default class BasedCanvas implements IBasedCanvas {\n   static currentFPR = currentFPR;\n   static addFPRListener = addListener;\n\n   readonly #ctx: CanvasRenderingContext2D;\n   #ctxWidth!: RasterUnits;\n   #ctxHeight!: RasterUnits;\n   get ctx() { return this.#ctx }\n   get ctxWidth() { return this.#ctxWidth }\n   get ctxHeight() { return this.#ctxHeight }\n\n   readonly #canvas: HTMLCanvasElement;\n   #canvasWidth!: CSSPixels;\n   #canvasHeight!: CSSPixels;\n   get canvas() { return this.#canvas }\n   get canvasWidth() { return this.#canvasWidth }\n   get canvasHeight() { return this.#canvasHeight }\n\n   readonly #container: HTMLElement;\n   #containerWidth!: CSSPixels;\n   #containerHeight!: CSSPixels;\n   get container() { return this.#container }\n   get containerWidth() { return this.#containerWidth }\n   get containerHeight() { return this.#containerHeight }\n\n   readonly #fprOverflow: boolean;\n   #fprCountX!: number;\n   #fprCountY!: number;\n   get fprCountX() { return this.#fprCountX }\n   get fprCountY() { return this.#fprCountY }\n\n   constructor (container: HTMLElement, maybeOptions?: BasedCanvasOptions) {\n      const options = Object.assign(defaultBasedCanvasOptions, maybeOptions);\n      const canvas = document.createElement(\"canvas\");\n      const ctx = canvas.getContext(\"2d\", options);\n      if (ctx == null) {\n         throw new Error('HTMLElement.getContext(\"2d\") returned null!');\n      }\n      container.appendChild(canvas);\n\n      addListener(this.lfprChanged.bind(this));\n\n      const RO = new ResizeObserver(this.lcontainerResized.bind(this));\n      RO.observe(container);\n\n      this.#ctx = ctx;\n      this.#canvas = canvas;\n      this.#container = container;\n      this.#fprOverflow = !!options.overflow;\n      this.fetch();\n   }\n\n   private lfprChanged = this.recalc;\n\n   private lcontainerResized([{contentRect: { width, height }}]: ResizeObserverEntry[]) {\n      this.#containerWidth = width as CSSPixels;\n      this.#containerHeight = height as CSSPixels;\n      this.recalc();\n      this.callContainerListeners()\n   }\n\n   fetch() {\n      this.#ctxWidth = this.#canvas.width as RasterUnits;\n      this.#ctxHeight = this.#canvas.height as RasterUnits;\n\n      const canvasProps = window.getComputedStyle(this.#canvas);\n      this.#canvasWidth = +canvasProps.width.slice(-2) as CSSPixels;\n      this.#canvasHeight = +canvasProps.height.slice(-2) as CSSPixels;\n\n      const containerProps = window.getComputedStyle(this.#container);\n      this.#containerWidth = +containerProps.width.slice(-2) as CSSPixels;\n      this.#containerHeight = +containerProps.height.slice(-2) as CSSPixels;\n   }\n\n   recalc() {\n      const { dpx, cpx } = currentFPR;\n\n      const toInt = this.#fprOverflow ? Math.ceil : Math.floor;\n\n      const fprCX = toInt(this.#containerWidth / cpx);\n      const fprCY = toInt(this.#containerHeight / cpx);\n      this.#fprCountX = fprCX;\n      this.#fprCountY  = fprCY;\n\n      const newCtxWidth = fprCX * dpx as DisplayPixels;\n      const newCtxHeight = fprCY * dpx as DisplayPixels;\n\n      const ctxSizeChanged = (\n         (newCtxWidth !== this.#ctxWidth)\n         ||\n         (newCtxHeight !== this.#ctxHeight)\n      );\n\n      const newCanvasWidth = fprCX * cpx as CSSPixels;\n      const newCanvasHeight = fprCY * cpx as CSSPixels;\n\n      const canvasSizeChanged = (\n         (newCanvasWidth !== this.#canvasWidth)\n         ||\n         (newCanvasHeight !== this.#canvasHeight)\n      );\n\n      if (ctxSizeChanged) {\n         this.#canvas.width = newCtxWidth;\n         this.#canvas.height = newCtxHeight;\n         this.#ctxWidth = newCtxWidth;\n         this.#ctxHeight = newCtxHeight;\n      }\n\n      if (canvasSizeChanged) {\n         this.#canvas.style.width = `${newCanvasWidth}px`;\n         this.#canvas.style.height = `${newCanvasHeight}px`;\n         this.#canvasWidth = newCanvasWidth;\n         this.#canvasHeight = newCanvasHeight;\n      }\n\n      if (ctxSizeChanged) {\n         this.callCtxListeners();\n      }\n\n      if (canvasSizeChanged) {\n         this.callCanvasListeners();\n      }\n   }\n\n   #ctxListeners: Runnable[] = [];\n   // it's times like this that make you want the function bind syntax\n   addCtxResizeListener = this.#ctxListeners.push.bind(this.#ctxListeners);\n   private callCtxListeners() {\n      this.#ctxListeners.forEach(ru => ru());\n   }\n\n   #canvasListeners: Runnable[] = [];\n   addCanvasResizeListener = this.#canvasListeners.push.bind(this.#canvasListeners);\n   private callCanvasListeners() {\n      this.#canvasListeners.forEach(ru => ru());\n   }\n\n   #containerListeners: Runnable[] = [];\n   addContainerResizeListener = this.#containerListeners.push.bind(this.#containerListeners);\n   private callContainerListeners() {\n      this.#containerListeners.forEach(ru => ru());\n   }\n}\n"],"names":["lastdpr","window","devicePixelRatio","listeners","addEventListener","newdpr","forEach","ru","push","bind","addListener","currentFPR","dpx","cpx","updateFPR","dpr","co","n","Math","abs","round","getFPR","addDPRListener","defaultBasedCanvasOptions","alpha","BasedCanvas","[object Object]","container","maybeOptions","_ctx","_ctxWidth","_ctxHeight","_canvas","_canvasWidth","_canvasHeight","_container","_containerWidth","_containerHeight","_fprOverflow","_fprCountX","_fprCountY","this","recalc","_ctxListeners","__classPrivateFieldGet","_canvasListeners","_containerListeners","options","Object","assign","canvas","document","createElement","ctx","getContext","Error","appendChild","lfprChanged","ResizeObserver","lcontainerResized","observe","__classPrivateFieldSet","overflow","fetch","ctxWidth","ctxHeight","canvasWidth","canvasHeight","containerWidth","containerHeight","fprCountX","fprCountY","contentRect","width","height","callContainerListeners","canvasProps","getComputedStyle","slice","containerProps","toInt","ceil","floor","fprCX","fprCY","newCtxWidth","newCtxHeight","ctxSizeChanged","newCanvasWidth","newCanvasHeight","canvasSizeChanged","style","callCtxListeners","callCanvasListeners"],"mappings":"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"}