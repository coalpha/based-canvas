var BasedCanvas=function(){"use strict";let t=window.devicePixelRatio;const e=[];window.addEventListener("resize",(function(){const i=window.devicePixelRatio;t!==i&&e.forEach(t=>t())}));var i=e.push.bind(e);const s=[],n=s.push.bind(s),h={dpx:0,cpx:0};function a(){const[t,e]=function(){const t=window.devicePixelRatio;for(let i=1;i<100;i++)if(e=t*i,Math.abs(e-(0|e))<.001)return[Math.round(t*i),i];var e;return[1,1]}();h.dpx=t,h.cpx=e,s.forEach(t=>t())}a(),i(a);var r,o,c,d,l,p,u,w,v,g,f,C,x,M,W=function(t,e,i){if(!e.has(t))throw new TypeError("attempted to set private field on non-instance");return e.set(t,i),i},k=function(t,e){if(!e.has(t))throw new TypeError("attempted to get private field on non-instance");return e.get(t)};class L{constructor(t,e=!1){r.set(this,void 0),o.set(this,void 0),c.set(this,void 0),d.set(this,void 0),l.set(this,void 0),p.set(this,void 0),u.set(this,void 0),w.set(this,void 0),v.set(this,void 0),g.set(this,void 0),f.set(this,void 0),C.set(this,[]),this.addCtxResizeListener=k(this,C).push.bind(k(this,C)),x.set(this,[]),this.addCanvasResizeListener=k(this,x).push.bind(k(this,x)),M.set(this,[]),this.addContainerResizeListener=k(this,M).push.bind(k(this,M));const i=document.createElement("canvas"),s=i.getContext("2d",{alpha:e});if(null==s)throw new Error('HTMLElement.getContext("2d") returned null!');t.appendChild(i),n(this.lfprChanged.bind(this)),new ResizeObserver(this.lcontainerResized.bind(this)).observe(t),W(this,r,s),W(this,d,i),W(this,u,t)}get ctx(){return k(this,r)}get ctxWidth(){return k(this,o)}get ctxHeight(){return k(this,c)}get canvas(){return k(this,d)}get canvasWidth(){return k(this,l)}get canvasHeight(){return k(this,p)}get container(){return k(this,u)}get containerWidth(){return k(this,w)}get containerHeight(){return k(this,v)}get fprCountX(){return k(this,g)}get fprCountY(){return k(this,f)}lfprChanged(){this.recalc()}lcontainerResized([{contentRect:{width:t,height:e}}]){W(this,w,t),W(this,v,e),this.recalc(),this.callContainerListeners()}fetch(){W(this,o,k(this,d).width),W(this,c,k(this,d).height);const t=window.getComputedStyle(k(this,d));W(this,l,+t.width.slice(-2)),W(this,p,+t.height.slice(-2));const e=window.getComputedStyle(k(this,u));W(this,w,+e.width.slice(-2)),W(this,v,+e.height.slice(-2)),this.recalc()}recalc(){const{dpx:t,cpx:e}=h,i=k(this,w)/e|0,s=k(this,v)/e|0;W(this,g,i),W(this,f,s);const n=i*t,a=s*t;n===k(this,o)&&a===k(this,c)||(this.setCtxSize(n,a),W(this,o,n),W(this,c,a));const r=i*e,d=s*e;r===k(this,l)&&d===k(this,p)||(this.setCanvasSize(r,d),W(this,l,r),W(this,p,d))}setCanvasSize(t,e){k(this,d).style.width=`${t}px`,k(this,d).style.height=`${e}px`,this.callCanvasListeners()}setCtxSize(t,e){k(this,d).width=W(this,o,t),k(this,d).height=W(this,c,e),this.callCtxListeners()}callCtxListeners(){k(this,C).forEach(t=>t())}callCanvasListeners(){k(this,x).forEach(t=>t())}callContainerListeners(){k(this,M).forEach(t=>t())}}return r=new WeakMap,o=new WeakMap,c=new WeakMap,d=new WeakMap,l=new WeakMap,p=new WeakMap,u=new WeakMap,w=new WeakMap,v=new WeakMap,g=new WeakMap,f=new WeakMap,C=new WeakMap,x=new WeakMap,M=new WeakMap,L.currentFPR=h,L.addFPRListener=n,L}();
//# sourceMappingURL=lib.iife.js.map
