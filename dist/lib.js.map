{"version":3,"file":"lib.js","sources":["../vendor/BrowserZoomListener.ts","../src/fpr.ts","../vendor/SimpleResizeObserver.ts","../src/BasedCanvas.ts"],"sourcesContent":["type NumberConsumer = (dpr: number) => void;\nlet lastdpr = window.devicePixelRatio;\nconst fns: NumberConsumer[] = [];\n\nfunction dispatch() {\n   const dpr = window.devicePixelRatio;\n   if (dpr !== lastdpr) {\n      for (var i = 0; i < fns.length; i++) {\n         fns[i](dpr);\n      }\n      lastdpr = dpr;\n   }\n}\n\nwindow.addEventListener(\"resize\", dispatch);\n\nexport default function browserZoomListener(fn: NumberConsumer): void {\n   fns.push(fn);\n}\n","import { CSSPixels, DisplayPixels } from \"./pixels\";\n\nconst CSS_PIXELS_LIMIT = 100;\n\nexport type FractionalPixelRatio = {\n   readonly dpx: DisplayPixels,\n   readonly cpx: CSSPixels,\n}; // would be nice to have a tuple type\n\nconst defaultFPR = {\n   dpx: 1 as DisplayPixels,\n   cpx: 1 as CSSPixels\n};\n\nexport function getFPR(): FractionalPixelRatio {\n   const dpr = window.devicePixelRatio;\n   for (let co = 1; co < CSS_PIXELS_LIMIT; co++) {\n      if (Number.isInteger(dpr * co)) {\n         return {\n            dpx: dpr * co as DisplayPixels,\n            cpx: co as CSSPixels,\n         };\n      }\n   }\n   return defaultFPR;\n}\n","/// <reference types=\"./ResizeObserver\"/>\n\ntype SimpleResizeObserverFn = (entry: ResizeObserverEntry) => void;\ntype BoxOptions = ResizeObserverObserveOptions[\"box\"];\n\nexport default class SimpleResizeObserver {\n   #observer: ResizeObserver;\n   #fn: SimpleResizeObserverFn;\n   constructor(el: Element, fn: SimpleResizeObserverFn, box: BoxOptions = \"content-box\") {\n      this.#fn = fn;\n      this.#observer = new ResizeObserver(this.dispatch.bind(this));\n      this.#observer.observe(el, { box });\n   }\n\n   dispatch(entries: ResizeObserverEntry[]) {\n      this.#fn(entries[0]);\n   }\n\n   disconnect() {\n      this.#observer.disconnect();\n   }\n}\n","/// <reference types=\"../vendor/ResizeObserver\"/>\nimport { CSSPixels, DisplayPixels, RasterUnits } from \"./pixels\";\nimport { getFPR } from \"./fpr\";\n\nimport browserZoomListener from \"../vendor/BrowserZoomListener\";\nimport SimpleResizeObserver from \"../vendor/SimpleResizeObserver\";\n\nexport default class BasedCanvas {\n   static fpr = getFPR();\n   private static fprListeners: (() => void)[] = [];\n   static updateFPR() {\n      BasedCanvas.fpr = getFPR();\n      this.fprListeners.forEach(listener => listener());\n   }\n\n   private setCanvasSize(width: CSSPixels, height: CSSPixels) {\n      this.#canvas.style.width = `${width}px`;\n      this.#canvas.style.height = `${height}px`;\n   }\n\n   private setContextSize(width: RasterUnits, height: RasterUnits) {\n      // annoyingly, these get cleared when the HTMLCanvasElement is resized\n      // so we can't ctx.save\n      // this.#ctx.save();\n      this.#canvas.width = width;\n      this.#canvas.height = height;\n      // this.#ctx.restore();\n      this.paint();\n   }\n\n   \n   #fprCountX!: number;\n   #fprCountY!: number;\n   #containerWidth!: CSSPixels;\n   #containerHeight!: CSSPixels;\n   private containerResized(entry: ResizeObserverEntry) {\n      const containerSize = entry.contentRect; // this'll be deprecated later\n      this.#containerWidth = containerSize.width as CSSPixels;\n      this.#containerHeight = containerSize.height as CSSPixels;\n      this.prepaint();\n   }\n\n   public prepaint() {\n      const { dpx, cpx } = BasedCanvas.fpr;\n      const fprCountX = this.#fprCountX = this.#containerWidth / cpx | 0;\n      const fprCountY = this.#fprCountY = this.#containerHeight / cpx | 0;\n\n      this.setCanvasSize(\n         (fprCountX * cpx) as CSSPixels,\n         (fprCountY * cpx) as CSSPixels,\n      );\n      this.setContextSize(\n         (fprCountX * dpx) as RasterUnits,\n         (fprCountY * dpx) as RasterUnits,\n      );\n   }\n\n   #containerResizeObserver!: SimpleResizeObserver;\n   private registerListeners() {\n      BasedCanvas.fprListeners.push(this.prepaint.bind(this));\n      this.#containerResizeObserver = (\n         new SimpleResizeObserver(this.#container, this.containerResized.bind(this))\n      );\n   }\n\n   /** You should probably write your own paint function */\n   public paint = () => {};\n\n   readonly #container: HTMLElement;\n   readonly #canvas: HTMLCanvasElement;\n   readonly #ctx: CanvasRenderingContext2D;\n\n   constructor (container: HTMLElement, alpha = false) {\n      this.#container = container;\n      this.registerListeners();\n      this.#canvas = document.createElement(\"canvas\");\n      const ctx = this.#canvas.getContext(\"2d\", { alpha });\n      if (ctx == null) {\n         throw new Error('HTMLElement.getContext(\"2d\") returned null!');\n      }\n      this.#ctx = ctx; // I love flow analysis\n      container.appendChild(this.#canvas);\n   }\n\n   get container() { return this.#container }\n   get canvas() { return this.#canvas }\n   get ctx() { return this.#ctx }\n   get fprCountX() { return this.#fprCountX|0 }\n   get fprCountY() { return this.#fprCountY|0 }\n   get width(): RasterUnits {\n      return this.#canvas.width as RasterUnits;\n   }\n   get height(): RasterUnits {\n      return this.#canvas.height as RasterUnits;\n   }\n}\n\nbrowserZoomListener(BasedCanvas.updateFPR);\n"],"names":["__classPrivateFieldSet","__classPrivateFieldGet"],"mappings":"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"}