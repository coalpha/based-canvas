{"version":3,"file":"lib.iife.js","sources":["../src/DPR.ts","../src/isPrettyMuchAnInteger.ts","../src/FPR.ts","../src/BasedCanvas.ts"],"sourcesContent":["import Runnable from \"./Runnable\";\n\nlet lastdpr = window.devicePixelRatio;\n\nconst listeners: Runnable[] = [];\n\nfunction updateDPR() {\n   const newdpr = window.devicePixelRatio;\n   if (lastdpr !== newdpr) {\n      listeners.forEach(ru => ru());\n   }\n}\n\nwindow.addEventListener(\"resize\", updateDPR);\n\nexport default listeners.push.bind(listeners);\n","const TOLERANCE = 0.001;\n\nexport default function isPrettyMuchAnInteger(n: number): boolean {\n   return Math.abs(n - (n|0)) < TOLERANCE;\n}\n","import Runnable from \"./Runnable\";\nimport addDPRListener from \"./DPR\";\nimport kindaInt from \"./isPrettyMuchAnInteger\";\nimport { DisplayPixels, CSSPixels } from \"./pixels\";\n\nconst listeners: Runnable[] = [];\n\nexport const addListener = listeners.push.bind(listeners);\n\nexport const currentFPR = {\n   dpx: 0 as DisplayPixels,\n   cpx: 0 as CSSPixels,\n};\n\nconst CSS_PIXELS_LIMIT = 100;\n\nfunction getFPR(): [DisplayPixels, CSSPixels] {\n   const dpr = window.devicePixelRatio;\n   for (let co = 1; co < CSS_PIXELS_LIMIT; co++) {\n      if (kindaInt(dpr * co)) {\n         return [\n            Math.round(dpr * co) as DisplayPixels,\n            co as CSSPixels,\n         ];\n      }\n   }\n   return [\n      1 as DisplayPixels,\n      1 as CSSPixels,\n   ];\n}\n\nfunction updateFPR() {\n   const [dpx, cpx] = getFPR();\n   currentFPR.dpx = dpx;\n   currentFPR.cpx = cpx;\n   listeners.forEach(ru => ru());\n}\n\nupdateFPR();\n\naddDPRListener(updateFPR);\n","import Runnable from \"./Runnable\";\nimport IBasedCanvas from \"./IBasedCanvas\";\nimport { RasterUnits, DisplayPixels, CSSPixels } from \"./pixels\";\nimport { currentFPR, addListener } from \"./FPR\";\n\nexport default class BasedCanvas implements IBasedCanvas {\n   static currentFPR = currentFPR;\n   static addFPRListener = addListener;\n\n   readonly #ctx: CanvasRenderingContext2D;\n   #ctxWidth!: RasterUnits;\n   #ctxHeight!: RasterUnits;\n   get ctx() { return this.#ctx }\n   get ctxWidth() { return this.#ctxWidth }\n   get ctxHeight() { return this.#ctxHeight }\n\n   readonly #canvas: HTMLCanvasElement;\n   #canvasWidth!: CSSPixels;\n   #canvasHeight!: CSSPixels;\n   get canvas() { return this.#canvas }\n   get canvasWidth() { return this.#canvasWidth }\n   get canvasHeight() { return this.#canvasHeight }\n\n   readonly #container: HTMLElement;\n   #containerWidth!: CSSPixels;\n   #containerHeight!: CSSPixels;\n   get container() { return this.#container }\n   get containerWidth() { return this.#containerWidth }\n   get containerHeight() { return this.#containerHeight }\n\n   #fprCountX!: number;\n   #fprCountY!: number;\n   get fprCountX() { return this.#fprCountX }\n   get fprCountY() { return this.#fprCountY }\n\n   constructor (container: HTMLElement, alpha = false) {\n      const canvas = document.createElement(\"canvas\");\n      const ctx = canvas.getContext(\"2d\", { alpha });\n      if (ctx == null) {\n         throw new Error('HTMLElement.getContext(\"2d\") returned null!');\n      }\n      container.appendChild(canvas);\n\n      addListener(this.lfprChanged.bind(this));\n\n      const RO = new ResizeObserver(this.lcontainerResized.bind(this));\n      RO.observe(container);\n\n      this.#ctx = ctx;\n      this.#canvas = canvas;\n      this.#container = container;\n   }\n\n   private lfprChanged() {\n      this.recalc();\n   }\n\n   private lcontainerResized([{contentRect: { width, height }}]: ResizeObserverEntry[]) {\n      this.#containerWidth = width as CSSPixels;\n      this.#containerHeight = height as CSSPixels;\n      this.recalc();\n      this.callContainerListeners()\n   }\n\n   fetch() {\n      this.#ctxWidth = this.#canvas.width as RasterUnits;\n      this.#ctxHeight = this.#canvas.height as RasterUnits;\n\n      const canvasProps = window.getComputedStyle(this.#canvas);\n      this.#canvasWidth = +canvasProps.width.slice(-2) as CSSPixels;\n      this.#canvasHeight = +canvasProps.height.slice(-2) as CSSPixels;\n\n      const containerProps = window.getComputedStyle(this.#container);\n      this.#containerWidth = +containerProps.width.slice(-2) as CSSPixels;\n      this.#containerHeight = +containerProps.height.slice(-2) as CSSPixels;\n\n      this.recalc();\n   }\n\n   recalc() {\n      const { dpx, cpx } = currentFPR;\n\n      const fprCX = this.#containerWidth / cpx | 0;\n      const fprCY = this.#containerHeight / cpx | 0;\n      this.#fprCountX = fprCX;\n      this.#fprCountY  = fprCY;\n\n      const newCtxWidth = fprCX * dpx as DisplayPixels;\n      const newCtxHeight = fprCY * dpx as DisplayPixels;\n\n      if (\n         (newCtxWidth !== this.#ctxWidth)\n         ||\n         (newCtxHeight !== this.#ctxHeight)\n      ) {\n         this.setCtxSize(newCtxWidth, newCtxHeight);\n         this.#ctxWidth = newCtxWidth;\n         this.#ctxHeight = newCtxHeight;\n      }\n\n      const newCanvasWidth = fprCX * cpx as CSSPixels;\n      const newCanvasHeight = fprCY * cpx as CSSPixels;\n\n      if (\n         (newCanvasWidth !== this.#canvasWidth)\n         ||\n         (newCanvasHeight !== this.#canvasHeight)\n      ) {\n         this.setCanvasSize(newCanvasWidth, newCanvasHeight);\n         this.#canvasWidth = newCanvasWidth;\n         this.#canvasHeight = newCanvasHeight;\n      }\n   }\n\n   private setCanvasSize(width: CSSPixels, height: CSSPixels) {\n      this.#canvas.style.width = `${width}px`;\n      this.#canvas.style.height = `${height}px`;\n      this.callCanvasListeners();\n   }\n\n   private setCtxSize(width: RasterUnits, height: RasterUnits) {\n      this.#canvas.width = this.#ctxWidth = width;\n      this.#canvas.height = this.#ctxHeight = height;\n      this.callCtxListeners();\n   }\n\n   #ctxListeners: Runnable[] = [];\n   // it's times like this that make you want the function bind syntax\n   addCtxResizeListener = this.#ctxListeners.push.bind(this.#ctxListeners);\n   private callCtxListeners() {\n      this.#ctxListeners.forEach(ru => ru());\n   }\n\n   #canvasListeners: Runnable[] = [];\n   addCanvasResizeListener = this.#canvasListeners.push.bind(this.#canvasListeners);\n   private callCanvasListeners() {\n      this.#canvasListeners.forEach(ru => ru());\n   }\n\n   #containerListeners: Runnable[] = [];\n   addContainerResizeListener = this.#containerListeners.push.bind(this.#containerListeners);\n   private callContainerListeners() {\n      this.#containerListeners.forEach(ru => ru());\n   }\n}\n"],"names":["listeners","kindaInt"],"mappings":"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"}